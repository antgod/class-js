<meta http-equiv="X-UA-Compatible" content="IE=IEVersion">
注意，这里IE 的版本（IEVersion）有以下一些不同的值，而且这些值并不一定与上述4 种文档
模式对应。
 Edge：始终以最新的文档模式来渲染页面。忽略文档类型声明。对于IE8，始终保持以IE8 标
准模式渲染页面。对于IE9，则以IE9 标准模式渲染页面。
 EmulateIE9：如果有文档类型声明，则以IE9 标准模式渲染页面，否则将文档模式设置为IE5。
 EmulateIE8：如果有文档类型声明，则以IE8 标准模式渲染页面，否则将文档模式设置为IE5。
 EmulateIE7：如果有文档类型声明，则以IE7 标准模式渲染页面，否则将文档模式设置为IE5。
 9：强制以IE9 标准模式渲染页面，忽略文档类型声明。
 8：强制以IE8 标准模式渲染页面，忽略文档类型声明。
 7：强制以IE7 标准模式渲染页面，忽略文档类型声明。
 5：强制将文档模式设置为IE5，忽略文档类型声明。
比如，要想让文档模式像在IE7 中一样，可以使用下面这行代码：
<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7">
如果不打算考虑文档类型声明，而直接使用IE7 标准模式，那么可以使用下面这行代码：
<meta http-equiv="X-UA-Compatible" content="IE=7">
没有规定说必须在页面中设置X-UA-Compatible。默认情况下，浏览器会通过文档类型声明来确
定是使用最佳的可用文档模式，还是使用混杂模式。
通过 document.documentMode 属性可以知道给定页面使用的是什么文档模式。这个属性是IE8
中新增的，它会返回使用的文档模式的版本号（在IE9 中，可能返回的版本号为5、7、8、9）：
var mode = document.documentMode;
知道页面采用的是什么文档模式，有助于理解页面的行为方式。无论在什么文档模式下，都可以访
问这个属性。