文档模式
IE8 引入了一个新的概念叫“文档模式”（document mode）。页面的文档模式决定了可以使用什么功
能。换句话说，文档模式决定了你可以使用哪个级别的CSS，可以在JavaScript 中使用哪些API，以及
如何对待文档类型（doctype）。到了IE9，总共有以下4 种文档模式。
 IE5：以混杂模式渲染页面（IE5 的默认模式就是混杂模式）。IE8 及更高版本中的新功能都无法使用。
 IE7：以IE7 标准模式渲染页面。IE8 及更高版本中的新功能都无法使用。
 IE8：以IE8 标准模式渲染页面。IE8 中的新功能都可以使用，因此可以使用Selectors API、更多CSS2 级选择符和某些CSS3 功能，还有一些HTML5 的功能。不过IE9 中的新功能无法使用。
 IE9：以IE9 标准模式渲染页面。IE9 中的新功能都可以使用，比如ECMAScript 5、完整的CSS3以及更多HTML5 功能。这个文档模式是最高级的模式。

要理解 IE8 及更高版本的工作原理，必须理解文档模式。
要强制浏览器以某种模式渲染页面，可以使用HTTP 头部信息X-UA-Compatible，或通过等价的<meta>标签来设置：

	<meta http-equiv="X-UA-Compatible" content="IE=IEVersion">

注意，这里IE 的版本（IEVersion）有以下一些不同的值，而且这些值并不一定与上述4 种文档模式对应。

 Edge：始终以最新的文档模式来渲染页面。忽略文档类型声明。对于IE8，始终保持以IE8 标
准模式渲染页面。对于IE9，则以IE9 标准模式渲染页面。
 EmulateIE9：如果有文档类型声明，则以IE9 标准模式渲染页面，否则将文档模式设置为IE5。
 EmulateIE8：如果有文档类型声明，则以IE8 标准模式渲染页面，否则将文档模式设置为IE5。
 EmulateIE7：如果有文档类型声明，则以IE7 标准模式渲染页面，否则将文档模式设置为IE5。
 9：强制以IE9 标准模式渲染页面，忽略文档类型声明。
 8：强制以IE8 标准模式渲染页面，忽略文档类型声明。
 7：强制以IE7 标准模式渲染页面，忽略文档类型声明。
 5：强制将文档模式设置为IE5，忽略文档类型声明。


比如，要想让文档模式像在IE7 中一样，可以使用下面这行代码：
<meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7">
如果不打算考虑文档类型声明，而直接使用IE7 标准模式，那么可以使用下面这行代码：
<meta http-equiv="X-UA-Compatible" content="IE=7">



通过 document.documentMode 属性可以知道给定页面使用的是什么文档模式。这个属性是IE8
中新增的，它会返回使用的文档模式的版本号（在IE9 中，可能返回的版本号为5、7、8、9）：
	var mode = document.documentMode;
知道页面采用的是什么文档模式，有助于理解页面的行为方式。无论在什么文档模式下，都可以访
问这个属性。